{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ExpenseTracker\\\\src\\\\Components\\\\AddExpense\\\\ExpenseDetails.js\";\nimport React from \"react\";\nimport { Card } from 'react-bootstrap';\nimport classes from './ExpenseDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseDetails = async props => {\n  let content;\n  let des = props.expense.map(Des => Des.description);\n  let price = props.expense.map(Price => Price.price);\n  let category = props.expense.map(cat => cat.category);\n  try {\n    for (let i = 0; i < des.length; i++) {\n      const response = await fetch('https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          description: des[i],\n          price: price[i],\n          category: category[i]\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert('Expense has been updated');\n      } else {\n        throw new Error('Couldnt store the expense');\n      }\n    }\n    /* const res= await fetch('https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses.json')\r\n     if(!res.ok){\r\n         throw new Error('Couldnt get data')\r\n     }\r\n       const data= res.json()\r\n     console.log(data)\r\n     let Details=[]\r\n     for(const key of data){\r\n         Details.push({\r\n             description: data[key].description,\r\n             price: data[key].price,\r\n             category: data[key].category\r\n         })\r\n     }\r\n     \r\n     content = Details.map(details =>\r\n         <li key={Math.random()}>\r\n             {details.description} - Rs{details.price} - {details.category}\r\n         </li>)*/\n  } catch (err) {\n    alert(err.message);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.users,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpenseDetails;\nexport default ExpenseDetails;\nvar _c;\n$RefreshReg$(_c, \"ExpenseDetails\");","map":{"version":3,"names":["React","Card","classes","jsxDEV","_jsxDEV","ExpenseDetails","props","content","des","expense","map","Des","description","price","Price","category","cat","i","length","response","fetch","method","body","JSON","stringify","headers","ok","alert","Error","err","message","className","users","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ExpenseTracker/src/Components/AddExpense/ExpenseDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from 'react-bootstrap'\r\nimport classes from './ExpenseDetails.module.css'\r\n\r\nconst ExpenseDetails=async (props)=>{\r\n\r\n    let content\r\n    let des=props.expense.map(Des=>Des.description)\r\n    let price= props.expense.map(Price=>Price.price)\r\n    let category=props.expense.map(cat=>cat.category)\r\n\r\n\r\n\r\n    try{\r\n        for(let i=0;i<des.length;i++){\r\n            const response= await fetch('https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses.json',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                description: des[i],\r\n                price: price[i],\r\n                category: category[i] \r\n            }),\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n        if(response.ok){\r\n            alert('Expense has been updated')\r\n        }\r\n        else{\r\n            throw new Error('Couldnt store the expense')\r\n        }\r\n        }\r\n       /* const res= await fetch('https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses.json')\r\n        if(!res.ok){\r\n            throw new Error('Couldnt get data')\r\n        }\r\n\r\n        const data= res.json()\r\n        console.log(data)\r\n        let Details=[]\r\n        for(const key of data){\r\n            Details.push({\r\n                description: data[key].description,\r\n                price: data[key].price,\r\n                category: data[key].category\r\n            })\r\n        }\r\n        \r\n        content = Details.map(details =>\r\n            <li key={Math.random()}>\r\n                {details.description} - Rs{details.price} - {details.category}\r\n            </li>)*/\r\n    }catch (err){\r\n        alert(err.message)\r\n    }\r\n    return(\r\n        <Card className={classes.users}>\r\n        <ul>\r\n            {content}\r\n        </ul>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseDetails"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,OAAO,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAC,MAAOC,KAAK,IAAG;EAEhC,IAAIC,OAAO;EACX,IAAIC,GAAG,GAACF,KAAK,CAACG,OAAO,CAACC,GAAG,CAACC,GAAG,IAAEA,GAAG,CAACC,WAAW,CAAC;EAC/C,IAAIC,KAAK,GAAEP,KAAK,CAACG,OAAO,CAACC,GAAG,CAACI,KAAK,IAAEA,KAAK,CAACD,KAAK,CAAC;EAChD,IAAIE,QAAQ,GAACT,KAAK,CAACG,OAAO,CAACC,GAAG,CAACM,GAAG,IAAEA,GAAG,CAACD,QAAQ,CAAC;EAIjD,IAAG;IACC,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACT,GAAG,CAACU,MAAM,EAACD,CAAC,EAAE,EAAC;MACzB,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,0FAA0F,EAAC;QACvHC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBZ,WAAW,EAAEJ,GAAG,CAACS,CAAC,CAAC;UACnBJ,KAAK,EAAEA,KAAK,CAACI,CAAC,CAAC;UACfF,QAAQ,EAAEA,QAAQ,CAACE,CAAC;QACxB,CAAC,CAAC;QACFQ,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAChD,CAAC,CAAC;MACF,IAAGN,QAAQ,CAACO,EAAE,EAAC;QACXC,KAAK,CAAC,0BAA0B,CAAC;MACrC,CAAC,MACG;QACA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACA;IACD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC,QAAOC,GAAG,EAAC;IACRF,KAAK,CAACE,GAAG,CAACC,OAAO,CAAC;EACtB;EACA,oBACI1B,OAAA,CAACH,IAAI;IAAC8B,SAAS,EAAE7B,OAAO,CAAC8B,KAAM;IAAAC,QAAA,eAC/B7B,OAAA;MAAA6B,QAAA,EACK1B;IAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf,CAAC;AAAAC,EAAA,GAzDKjC,cAAc;AA2DpB,eAAeA,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}