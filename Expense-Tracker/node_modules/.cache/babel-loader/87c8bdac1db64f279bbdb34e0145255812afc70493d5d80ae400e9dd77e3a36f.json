{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  // AuthState\n  [userId]: {\n    isLoggedin: localStorage.getItem('token'),\n    idToken: ''\n  },\n  // ExpenseState\n  [userId]: {\n    description: '',\n    price: 0,\n    category: '',\n    activatePremium: false\n  }\n};\nlet x = 0;\nconst AuthSlice = createSlice({\n  name: 'Auth',\n  initialState: initialState.AuthState,\n  reducers: {\n    login(state, action) {\n      const {\n        userId\n      } = action.payload;\n      localStorage.setItem('token', action.payload.token);\n      state[userId].isLoggedin = true;\n      state[userId].idToken = action.payload.token;\n    },\n    logout(state, action) {\n      const {\n        userId\n      } = action.payload;\n      localStorage.removeItem('token');\n      state[userId].isLoggedin = false;\n      state[userId].idToken = undefined;\n    }\n  }\n});\nconst ExpenseSlice = createSlice({\n  name: 'Expense',\n  initialState: initialState.ExpenseState,\n  reducers: {\n    description(state, action) {\n      const {\n        userId\n      } = action.payload;\n      state[userId].description = action.payload.description;\n    },\n    price(state, action) {\n      const {\n        userId\n      } = action.payload;\n      state[userId].price = action.payload.price;\n    },\n    category(state, action) {\n      const {\n        userId\n      } = action.payload;\n      state[userId].category = action.payload.category;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    Auth: AuthSlice.reducer,\n    Expense: ExpenseSlice.reducer\n  }\n});\nexport const AuthActions = AuthSlice.actions;\nexport const ExpenseActions = ExpenseSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","userId","isLoggedin","localStorage","getItem","idToken","description","price","category","activatePremium","x","AuthSlice","name","AuthState","reducers","login","state","action","payload","setItem","token","logout","removeItem","undefined","ExpenseSlice","ExpenseState","store","reducer","Auth","Expense","AuthActions","actions","ExpenseActions"],"sources":["C:/Users/vaibh/WebDevSharpner/ExpenseTracker/src/Components/Store/Redux.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst initialState = {\r\n    // AuthState\r\n    [userId]: {\r\n      isLoggedin: localStorage.getItem('token'),\r\n      idToken: '',\r\n    },\r\n    // ExpenseState\r\n    [userId]: {\r\n      description: '',\r\n      price: 0,\r\n      category: '',\r\n      activatePremium: false,\r\n    },\r\n  };\r\nlet x=0\r\n\r\nconst AuthSlice = createSlice({\r\n    name: 'Auth',\r\n    initialState: initialState.AuthState,\r\n    reducers: {\r\n      login(state, action) {\r\n        const { userId } = action.payload;\r\n        localStorage.setItem('token', action.payload.token);\r\n        state[userId].isLoggedin = true;\r\n        state[userId].idToken = action.payload.token;\r\n      },\r\n      logout(state, action) {\r\n        const { userId } = action.payload;\r\n        localStorage.removeItem('token');\r\n        state[userId].isLoggedin = false;\r\n        state[userId].idToken = undefined;\r\n      },\r\n    },\r\n  });\r\n  \r\n\r\n  const ExpenseSlice = createSlice({\r\n    name: 'Expense',\r\n    initialState: initialState.ExpenseState,\r\n    reducers: {\r\n      description(state, action) {\r\n        const { userId } = action.payload;\r\n        state[userId].description = action.payload.description;\r\n      },\r\n      price(state, action) {\r\n        const { userId } = action.payload;\r\n        state[userId].price = action.payload.price;\r\n        \r\n      },\r\n      category(state, action) {\r\n        const { userId } = action.payload;\r\n        state[userId].category = action.payload.category;\r\n      },\r\n    },\r\n  });\r\n  \r\n\r\nconst store= configureStore({\r\n    reducer: {Auth: AuthSlice.reducer, Expense: ExpenseSlice.reducer}\r\n})\r\n\r\nexport const AuthActions=AuthSlice.actions\r\nexport const ExpenseActions=ExpenseSlice.actions\r\n\r\nexport default store"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAI5D,MAAMC,YAAY,GAAG;EACjB;EACA,CAACC,MAAM,GAAG;IACRC,UAAU,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzCC,OAAO,EAAE;EACX,CAAC;EACD;EACA,CAACJ,MAAM,GAAG;IACRK,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB;AACF,CAAC;AACH,IAAIC,CAAC,GAAC,CAAC;AAEP,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC1Ba,IAAI,EAAE,MAAM;EACZZ,YAAY,EAAEA,YAAY,CAACa,SAAS;EACpCC,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAM;QAAEhB;MAAO,CAAC,GAAGgB,MAAM,CAACC,OAAO;MACjCf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACE,KAAK,CAAC;MACnDJ,KAAK,CAACf,MAAM,CAAC,CAACC,UAAU,GAAG,IAAI;MAC/Bc,KAAK,CAACf,MAAM,CAAC,CAACI,OAAO,GAAGY,MAAM,CAACC,OAAO,CAACE,KAAK;IAC9C,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACpB,MAAM;QAAEhB;MAAO,CAAC,GAAGgB,MAAM,CAACC,OAAO;MACjCf,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCN,KAAK,CAACf,MAAM,CAAC,CAACC,UAAU,GAAG,KAAK;MAChCc,KAAK,CAACf,MAAM,CAAC,CAACI,OAAO,GAAGkB,SAAS;IACnC;EACF;AACF,CAAC,CAAC;AAGF,MAAMC,YAAY,GAAGzB,WAAW,CAAC;EAC/Ba,IAAI,EAAE,SAAS;EACfZ,YAAY,EAAEA,YAAY,CAACyB,YAAY;EACvCX,QAAQ,EAAE;IACRR,WAAWA,CAACU,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAM;QAAEhB;MAAO,CAAC,GAAGgB,MAAM,CAACC,OAAO;MACjCF,KAAK,CAACf,MAAM,CAAC,CAACK,WAAW,GAAGW,MAAM,CAACC,OAAO,CAACZ,WAAW;IACxD,CAAC;IACDC,KAAKA,CAACS,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAM;QAAEhB;MAAO,CAAC,GAAGgB,MAAM,CAACC,OAAO;MACjCF,KAAK,CAACf,MAAM,CAAC,CAACM,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;IAE5C,CAAC;IACDC,QAAQA,CAACQ,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAM;QAAEhB;MAAO,CAAC,GAAGgB,MAAM,CAACC,OAAO;MACjCF,KAAK,CAACf,MAAM,CAAC,CAACO,QAAQ,GAAGS,MAAM,CAACC,OAAO,CAACV,QAAQ;IAClD;EACF;AACF,CAAC,CAAC;AAGJ,MAAMkB,KAAK,GAAE5B,cAAc,CAAC;EACxB6B,OAAO,EAAE;IAACC,IAAI,EAAEjB,SAAS,CAACgB,OAAO;IAAEE,OAAO,EAAEL,YAAY,CAACG;EAAO;AACpE,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAACnB,SAAS,CAACoB,OAAO;AAC1C,OAAO,MAAMC,cAAc,GAACR,YAAY,CAACO,OAAO;AAEhD,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}