{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ExpenseTracker\\\\src\\\\Components\\\\AddExpense\\\\AddExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport classes from './AddExpenseForm.module.css';\nimport ExpenseDetails from \"./ExpenseDetails\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExpenseActions } from \"../Store/Redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_DARK_MODE\":\n      return {\n        ...state,\n        darkMode: !state.darkMode\n      };\n    default:\n      return state;\n  }\n};\nconst AddExpenseForm = () => {\n  _s();\n  const [des, setDes] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('Entertainment');\n  const [themeState, themeDispatch] = useReducer(themeReducer, {\n    darkMode: false\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingExpenseId, setEditingExpenseId] = useState(null);\n  const dispatch = useDispatch();\n  const activatePremium = useSelector(state => state.Expense.activatePremium);\n  const idToken = useSelector(state => state.Auth.idToken);\n  console.log(idToken);\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n  const toggleDarkMode = () => {\n    themeDispatch({\n      type: \"TOGGLE_DARK_MODE\"\n    });\n  };\n  const DesChangeHandler = event => {\n    setDes(event.target.value);\n    dispatch(ExpenseActions.description(event.target.value));\n  };\n  const PriceChangeHandler = event => {\n    setPrice(event.target.value);\n    dispatch(ExpenseActions.price(event.target.value));\n  };\n  const CategoryChangeHandler = event => {\n    setCategory(event.target.value);\n    dispatch(ExpenseActions.category(event.target.value));\n  };\n  const updateExpense = async expenseId => {\n    try {\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${expenseId}.json`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          description: des,\n          price: price,\n          category: category\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert('Expense has been updated');\n        fetchExpenses();\n      } else {\n        throw new Error('Could not update the expense');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleEditExpense = expenseId => {\n    const editedExpense = expenses.find(expense => expense.id === expenseId);\n    if (editedExpense) {\n      setDes(editedExpense.description);\n      dispatch(ExpenseActions.description(editedExpense.description));\n      setPrice(editedExpense.price);\n      dispatch(ExpenseActions.price(editedExpense.price));\n      setCategory(editedExpense.category);\n      dispatch(ExpenseActions.category(editedExpense.category));\n      setIsEditing(true);\n      setEditingExpenseId(expenseId);\n    }\n  };\n  const DeleteHandler = async id => {\n    try {\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${id}.json`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Couldnt dete from database');\n      } else {\n        alert('Expense has been deleted');\n        dispatch(ExpenseActions.description(''));\n        dispatch(ExpenseActions.category(''));\n        dispatch(ExpenseActions.price(0));\n        fetchExpenses();\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const fetchExpenses = async () => {\n    try {\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${idToken}.json`);\n      if (response.ok) {\n        const data = await response.json();\n        const loadedExpenses = [];\n        for (const key in data) {\n          console.log(idToken);\n          console.log(key);\n          if (key === idToken) {\n            loadedExpenses.push({\n              id: key,\n              description: data[key].description,\n              price: data[key].price,\n              category: data[key].category\n            });\n          }\n        }\n        setExpenses(loadedExpenses);\n      } else {\n        throw new Error('Failed to fetch expenses');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const SubmitNewExpense = async () => {\n    try {\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${idToken}.json`, {\n        method: 'POST',\n        body: JSON.stringify({\n          description: des,\n          price: price,\n          category: category\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert('Expense has been updated');\n        fetchExpenses();\n      } else {\n        throw new Error('Could not store the expense');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const SubmitHandler = async event => {\n    event.preventDefault();\n    if (des.trim() === '' || price.trim() === '' || category.trim() === '') {\n      alert('Please enter all fields to add a new expense.');\n      return;\n    }\n    if (isEditing) {\n      updateExpense(editingExpenseId);\n    } else {\n      SubmitNewExpense();\n    }\n    setPrice('');\n    setCategory('Entertainment');\n    setDes('');\n  };\n  const downloadExpensesAsCSV = () => {\n    const convertToCSV = expenses => {\n      const csvRows = [];\n      const headers = Object.keys(expenses[0]);\n      csvRows.push(headers.join(\",\"));\n      for (const expense of expenses) {\n        const values = headers.map(header => expense[header]);\n        csvRows.push(values.join(\",\"));\n      }\n      return csvRows.join(\"\\n\");\n    };\n    const csvContent = convertToCSV(expenses);\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = url;\n    downloadLink.download = \"expenses.csv\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    URL.revokeObjectURL(url);\n    document.body.removeChild(downloadLink);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      style: {\n        textAlign: 'center',\n        fontFamily: 'monospace',\n        fontSize: '25px'\n      },\n      children: \"Add Daily Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            value: des,\n            onChange: DesChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"number\",\n            children: \"Money Spent (in Rs):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"number\",\n            value: price,\n            onChange: PriceChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            id: \"category\",\n            onChange: CategoryChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Entertainment\",\n              children: \"Entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Food\",\n              children: \"Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Petrol\",\n              children: \"Petrol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.button,\n            type: \"submit\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [activatePremium && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        type: \"button\",\n        onClick: toggleDarkMode,\n        children: themeState.darkMode ? \"Switch to Light Theme\" : \"Switch to Dark Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 27\n      }, this), activatePremium && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        type: \"button\",\n        onClick: downloadExpensesAsCSV,\n        children: \"Download Expenses as CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseDetails, {\n        id: expense.id,\n        description: expense.description,\n        price: expense.price,\n        category: expense.category,\n        onEdit: handleEditExpense.bind(null, expense.id),\n        onDelete: DeleteHandler.bind(null, expense.id)\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(AddExpenseForm, \"6yL00nD2gHiihuJyoOMeHr2FKiU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AddExpenseForm;\nexport default AddExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"AddExpenseForm\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","ExpenseDetails","useDispatch","useSelector","ExpenseActions","jsxDEV","_jsxDEV","themeReducer","state","action","type","darkMode","AddExpenseForm","_s","des","setDes","price","setPrice","category","setCategory","themeState","themeDispatch","expenses","setExpenses","isEditing","setIsEditing","editingExpenseId","setEditingExpenseId","dispatch","activatePremium","Expense","idToken","Auth","console","log","fetchExpenses","toggleDarkMode","DesChangeHandler","event","target","value","description","PriceChangeHandler","CategoryChangeHandler","updateExpense","expenseId","response","fetch","method","body","JSON","stringify","headers","ok","alert","Error","err","message","handleEditExpense","editedExpense","find","expense","id","DeleteHandler","data","json","loadedExpenses","key","push","SubmitNewExpense","SubmitHandler","preventDefault","trim","downloadExpensesAsCSV","convertToCSV","csvRows","Object","keys","join","values","map","header","csvContent","blob","Blob","url","URL","createObjectURL","downloadLink","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","className","input","children","Title","style","textAlign","fontFamily","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","htmlFor","onChange","name","button","onClick","onEdit","bind","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ExpenseTracker/src/Components/AddExpense/AddExpenseForm.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport classes from './AddExpenseForm.module.css'\r\nimport ExpenseDetails from \"./ExpenseDetails\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ExpenseActions } from \"../Store/Redux\";\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_DARK_MODE\":\r\n      return { ...state, darkMode: !state.darkMode };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst AddExpenseForm = () => {\r\n\r\n  const [des, setDes] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [category, setCategory] = useState('Entertainment');\r\n  const [themeState, themeDispatch] = useReducer(themeReducer, { darkMode: false });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingExpenseId, setEditingExpenseId] = useState(null);\r\n  const dispatch=useDispatch()\r\n  const activatePremium=useSelector((state)=>state.Expense.activatePremium)\r\n  const idToken=useSelector((state)=>state.Auth.idToken)\r\n  console.log(idToken)\r\n\r\n  useEffect(() => {\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    themeDispatch({ type: \"TOGGLE_DARK_MODE\" });\r\n  };\r\n\r\n  const DesChangeHandler = (event) => {\r\n    setDes(event.target.value);\r\n    dispatch(ExpenseActions.description(event.target.value))\r\n  }\r\n\r\n  const PriceChangeHandler = (event) => {\r\n    setPrice(event.target.value);\r\n    dispatch(ExpenseActions.price(event.target.value))\r\n  }\r\n\r\n  const CategoryChangeHandler = (event) => {\r\n    setCategory(event.target.value);\r\n    dispatch(ExpenseActions.category(event.target.value))\r\n  }\r\n\r\n  const updateExpense = async (expenseId) => {\r\n    try {\r\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${expenseId}.json`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          description: des,\r\n          price: price,\r\n          category: category\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      if (response.ok) {\r\n        alert('Expense has been updated');\r\n        \r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error('Could not update the expense');\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  const handleEditExpense = (expenseId) => {\r\n    \r\n    const editedExpense = expenses.find(expense => expense.id === expenseId);\r\n    if (editedExpense) {\r\n\r\n      setDes(editedExpense.description);\r\n      dispatch(ExpenseActions.description(editedExpense.description))\r\n      setPrice(editedExpense.price);\r\n      dispatch(ExpenseActions.price(editedExpense.price))\r\n      setCategory(editedExpense.category);\r\n      dispatch(ExpenseActions.category(editedExpense.category))\r\n      setIsEditing(true);\r\n      setEditingExpenseId(expenseId);\r\n    }\r\n  }\r\n\r\n  const DeleteHandler= async (id)=>{\r\n\r\n    try{\r\n\r\n        const response= await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${id}.json`,{\r\n        method: 'DELETE'\r\n        })\r\n\r\n        if(!response.ok){\r\n            throw new Error('Couldnt dete from database')\r\n        }\r\n        else{\r\n          alert('Expense has been deleted')\r\n          dispatch(ExpenseActions.description(''))\r\n          dispatch(ExpenseActions.category(''))\r\n          dispatch(ExpenseActions.price(0))\r\n          fetchExpenses()\r\n        }\r\n    }catch (err){\r\n        alert(err.message)\r\n    }\r\n}\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${idToken}.json`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        \r\n        const loadedExpenses = [];\r\n        for (const key in data) {\r\n          console.log(idToken)\r\n          console.log(key)\r\n          if(key===idToken){\r\n            loadedExpenses.push({\r\n              id: key,\r\n              description: data[key].description,\r\n              price: data[key].price,\r\n              category: data[key].category\r\n            });\r\n          }\r\n        }\r\n        setExpenses(loadedExpenses);\r\n      } else {\r\n        throw new Error('Failed to fetch expenses');\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  const SubmitNewExpense=async ()=>{\r\n    try {\r\n      const response = await fetch(`https://react-http-333ab-default-rtdb.asia-southeast1.firebasedatabase.app/Expenses/${idToken}.json`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          description: des,\r\n          price: price,\r\n          category: category\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      if (response.ok) {\r\n        alert('Expense has been updated');\r\n        \r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error('Could not store the expense');\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  const SubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (des.trim() === '' || price.trim() === '' || category.trim() === '') {\r\n      alert('Please enter all fields to add a new expense.');\r\n      return;\r\n    }\r\n  \r\n    if (isEditing) {\r\n      \r\n      updateExpense(editingExpenseId);\r\n    } else {\r\n     \r\n      SubmitNewExpense();\r\n    }\r\n\r\n    setPrice('');\r\n    setCategory('Entertainment');\r\n    setDes('');\r\n  }\r\n\r\n  const downloadExpensesAsCSV = () => {\r\n    \r\n    const convertToCSV = (expenses) => {\r\n      const csvRows = [];\r\n      const headers = Object.keys(expenses[0]);\r\n      csvRows.push(headers.join(\",\"));\r\n      for (const expense of expenses) {\r\n        const values = headers.map((header) => expense[header]);\r\n        csvRows.push(values.join(\",\"));\r\n      }\r\n      return csvRows.join(\"\\n\");\r\n    };\r\n\r\n   \r\n    const csvContent = convertToCSV(expenses);\r\n\r\n    \r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n\r\n    \r\n    const url = URL.createObjectURL(blob);\r\n\r\n   \r\n    const downloadLink = document.createElement(\"a\");\r\n    downloadLink.href = url;\r\n    downloadLink.download = \"expenses.csv\";\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n\r\n    URL.revokeObjectURL(url);\r\n    document.body.removeChild(downloadLink);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.input}>\r\n      <Card.Title style={{ textAlign: 'center', fontFamily: 'monospace', fontSize: '25px' }}>Add Daily Expense</Card.Title>\r\n      <Card.Body>\r\n        <form onSubmit={SubmitHandler}>\r\n          <div>\r\n            <label htmlFor=\"name\">Description:</label>\r\n            <input id=\"name\" type=\"text\" value={des} onChange={DesChangeHandler} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"number\">Money Spent (in Rs):</label>\r\n            <input id=\"number\" type=\"number\" value={price} onChange={PriceChangeHandler} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"category\">Category:</label>\r\n            <select name=\"category\" id=\"category\" onChange={CategoryChangeHandler}>\r\n              <option value=\"Entertainment\">Entertainment</option>\r\n              <option value=\"Food\">Food</option>\r\n              <option value=\"Petrol\">Petrol</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <button className={classes.button} type=\"submit\">Add Expense</button>\r\n          </div>\r\n        </form>\r\n      </Card.Body>\r\n      <br />\r\n      <div>\r\n      {activatePremium && <button className={classes.button} type=\"button\" onClick={toggleDarkMode}>\r\n          {themeState.darkMode ? \"Switch to Light Theme\" : \"Switch to Dark Theme\"}\r\n        </button>}\r\n      {activatePremium && <button className={classes.button} type=\"button\" onClick={downloadExpensesAsCSV}>\r\n          Download Expenses as CSV\r\n        </button>\r\n}\r\n      </div>\r\n      <ul>\r\n        {expenses.map((expense) => (\r\n          <ExpenseDetails\r\n            key={expense.id}\r\n            id={expense.id}\r\n            description={expense.description}\r\n            price={expense.price}\r\n            category={expense.category}\r\n            onEdit={handleEditExpense.bind(null,expense.id)}\r\n            onDelete={DeleteHandler.bind(null,expense.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}