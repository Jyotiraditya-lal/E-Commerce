{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ExpenseTracker\\\\src\\\\Components\\\\Login\\\\Profile\\\\Profile.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport LoginContext from \"../Store/login-context\";\nimport classes from './Profile.module.css';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  /*const [enteredName,setEnteredName]=useState('')\r\n  const [enteredURL,setEnteredURL]=useState('')\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const idToken=useSelector((state)=>state.Auth.idToken)\r\n    let empty=true;\r\n    if(enteredName!=='' && enteredURL!=''){\r\n      empty=false\r\n  }\r\n    const NameChangeHandler=(event)=>{\r\n      setEnteredName(event.target.value)\r\n  }\r\n    const URLChangeHandler=(event)=>{\r\n      setEnteredURL(event.target.value)\r\n  }\r\n    const SubmitHandler= async (event)=>{\r\n        event.preventDefault()\r\n      \r\n        try{\r\n         const response= await  fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyC3xsAFKErtyTNybpuyKLlB9KUsc837SZY',{\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n              idToken: idToken,\r\n              displayName: enteredName,\r\n              photoUrl: enteredURL,\r\n              returnSecureToken: true\r\n          }),\r\n          headers: {'Content-Type': 'application/json'}\r\n      })\r\n      if(response.ok){\r\n          alert('Your details have been updated')\r\n      }\r\n      else{\r\n          throw new Error('Something went wrong here!');\r\n      }\r\n         const res= await fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyC3xsAFKErtyTNybpuyKLlB9KUsc837SZY',{\r\n          method: 'POST',\r\n          body: JSON.stringify({idToken: idToken}),\r\n          headers: {'Content-Type': 'application/json'}\r\n       })\r\n       if(!res.ok){\r\n          throw new Error('Something went wrong!');\r\n       }\r\n         const data = await res.json()\r\n       setEnteredName(data.users[0].displayName)\r\n       setEnteredURL(data.users[0].photoUrl)\r\n       \r\n       \r\n      \r\n      }catch(err) {\r\n          alert(err.message)\r\n      }\r\n      \r\n  }\r\n    const EditDetailsHandler=()=>{\r\n      setEnteredName('')\r\n      setEnteredURL('')\r\n      setIsEditMode(true);\r\n  };\r\n    return (\r\n    <Card className={classes.input}>\r\n      <Card.Title style={{ textAlign: 'center', fontFamily: 'monospace', fontSize: '25px' }}>\r\n        Contact Details\r\n      </Card.Title>\r\n      <Card.Body>\r\n        <form>\r\n          <main>\r\n            <label>Full Name:</label>\r\n            \r\n            {isEditMode ? (\r\n              <input type=\"text\" value={enteredName} onChange={NameChangeHandler} />\r\n            ) : (\r\n              <p>{enteredName}</p>\r\n            )}\r\n            <br />\r\n            <label>Profile Photo URL:</label>\r\n            \r\n            {isEditMode ? (\r\n              <input type=\"url\" value={enteredURL} onChange={URLChangeHandler} />\r\n            ) : (\r\n              <p>{enteredURL}</p>\r\n            )}\r\n          </main>\r\n          <Card.Footer>\r\n            <button type=\"submit\" onClick={SubmitHandler}>\r\n              Update\r\n            </button>\r\n            <div style={{ textAlign: 'end' }}>\r\n              \r\n              {isEditMode ? (\r\n                <button onClick={() => setIsEditMode(false)}>Save</button>\r\n              ) : (\r\n                <button onClick={EditDetailsHandler}>Edit details</button>\r\n              )}\r\n            </div>\r\n          </Card.Footer>\r\n        </form>\r\n      </Card.Body>\r\n    </Card>\r\n  );*/\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Abc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useContext","useState","Card","LoginContext","classes","useSelector","jsxDEV","_jsxDEV","Profile","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ExpenseTracker/src/Components/Login/Profile/Profile.js"],"sourcesContent":["import React,{useContext, useState} from \"react\";\r\nimport {Card} from 'react-bootstrap'\r\nimport LoginContext from \"../Store/login-context\";\r\nimport classes from './Profile.module.css'\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Profile=()=>{\r\n\r\n    /*const [enteredName,setEnteredName]=useState('')\r\n    const [enteredURL,setEnteredURL]=useState('')\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const idToken=useSelector((state)=>state.Auth.idToken)\r\n\r\n    let empty=true;\r\n\r\n    if(enteredName!=='' && enteredURL!=''){\r\n        empty=false\r\n    }\r\n\r\n    const NameChangeHandler=(event)=>{\r\n        setEnteredName(event.target.value)\r\n    }\r\n\r\n    const URLChangeHandler=(event)=>{\r\n        setEnteredURL(event.target.value)\r\n    }\r\n\r\n    const SubmitHandler= async (event)=>{\r\n\r\n        event.preventDefault()\r\n        \r\n\r\n        try{\r\n           const response= await  fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyC3xsAFKErtyTNybpuyKLlB9KUsc837SZY',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                idToken: idToken,\r\n                displayName: enteredName,\r\n                photoUrl: enteredURL,\r\n                returnSecureToken: true\r\n            }),\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n        if(response.ok){\r\n            alert('Your details have been updated')\r\n        }\r\n        else{\r\n            throw new Error('Something went wrong here!');\r\n        }\r\n\r\n         const res= await fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyC3xsAFKErtyTNybpuyKLlB9KUsc837SZY',{\r\n            method: 'POST',\r\n            body: JSON.stringify({idToken: idToken}),\r\n            headers: {'Content-Type': 'application/json'}\r\n         })\r\n         if(!res.ok){\r\n            throw new Error('Something went wrong!');\r\n         }\r\n\r\n         const data = await res.json()\r\n         setEnteredName(data.users[0].displayName)\r\n         setEnteredURL(data.users[0].photoUrl)\r\n         \r\n         \r\n        \r\n        }catch(err) {\r\n            alert(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const EditDetailsHandler=()=>{\r\n        setEnteredName('')\r\n        setEnteredURL('')\r\n        setIsEditMode(true);\r\n    };\r\n\r\n    return (\r\n      <Card className={classes.input}>\r\n        <Card.Title style={{ textAlign: 'center', fontFamily: 'monospace', fontSize: '25px' }}>\r\n          Contact Details\r\n        </Card.Title>\r\n        <Card.Body>\r\n          <form>\r\n            <main>\r\n              <label>Full Name:</label>\r\n              \r\n              {isEditMode ? (\r\n                <input type=\"text\" value={enteredName} onChange={NameChangeHandler} />\r\n              ) : (\r\n                <p>{enteredName}</p>\r\n              )}\r\n              <br />\r\n              <label>Profile Photo URL:</label>\r\n              \r\n              {isEditMode ? (\r\n                <input type=\"url\" value={enteredURL} onChange={URLChangeHandler} />\r\n              ) : (\r\n                <p>{enteredURL}</p>\r\n              )}\r\n            </main>\r\n            <Card.Footer>\r\n              <button type=\"submit\" onClick={SubmitHandler}>\r\n                Update\r\n              </button>\r\n              <div style={{ textAlign: 'end' }}>\r\n                \r\n                {isEditMode ? (\r\n                  <button onClick={() => setIsEditMode(false)}>Save</button>\r\n                ) : (\r\n                  <button onClick={EditDetailsHandler}>Edit details</button>\r\n                )}\r\n              </div>\r\n            </Card.Footer>\r\n          </form>\r\n        </Card.Body>\r\n      </Card>\r\n    );*/\r\n    return (\r\n        <p>Abc</p>\r\n    )\r\n};\r\n\r\n\r\nexport default Profile"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,iBAAiB;AACpC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,OAAO,GAACA,CAAA,KAAI;EAEd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAYI,oBACID,OAAA;IAAAE,QAAA,EAAG;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAElB,CAAC;AAACC,EAAA,GAnHIN,OAAO;AAsHb,eAAeA,OAAO;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}